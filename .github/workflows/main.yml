name: CI
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # latest = https://www.microchip.com/mplabxc16linux
      # current = http://ww1.microchip.com/downloads/en/DeviceDoc/xc16-v1.50-full-install-linux64-installer.run
      XC16_INSTALLER_URL: https://ww1.microchip.com/downloads/en/DeviceDoc/xc16-v1.50-full-install-linux64-installer.run
      #                            https://ww1.microchip.com/downloads/en/DeviceDoc/xc16-v1.50-full-install-linux64-installer.run
    steps:
      - name: set environment variables
        run: |
          echo "::set-env name=DOWNLOADS_PATH::$PWD/downloads"
          echo "::set-env name=XC16_INSTALLER_PATH::$PWD/downloads/xc16-linux-installer.run"
          echo "::set-env name=XC16_INSTALL_PREFIX_PATH::$PWD/xc16_prefix"
#      - name: Cache downloads
#        uses: actions/cache@v1
#        with:
#          path: ${{ env.DOWNLOADS_PATH }}
#          key: ${{ runner.os }}-downloads

      - name: Install Dependencies
        run: |
          mkdir -p $DOWNLOADS_PATH
          [[ ! -f "$XC16_INSTALLER_PATH" ]] && curl -L --verbose --output "$XC16_INSTALLER_PATH" "$XC16_INSTALLER_URL"
          md5sum "$XC16_INSTALLER_PATH"
          chmod +x "$XC16_INSTALLER_PATH"
          # stupid installer requires stupid admin rights
          sudo "$XC16_INSTALLER_PATH" --prefix "XC16_INSTALL_PREFIX_PATH" --mode unattended --ModifyAll 0 --netservername ""
          echo "::add-path::$XC16_INSTALL_PREFIX_PATH/bin"

          sudo apt install doxygen graphviz
      - name: Get firmware source code
        uses: actions/checkout@v2
        with:
          path: src
          submodules: true

      - name: Build firmware
        run: |
          mkdir build
          cmake -S src -B build -DCMAKE_TOOLCHAIN_FILE="$(pwd)/src/cmake/PowerBoard_toolchain.cmake"
          cmake --build build
          cmake --install build --prefix install

      - name: Upload build folder (for debuggirg)
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

      - name: Upload install folder
        uses: actions/upload-artifact@v2
        with:
          name: install
          path: install
  test-bootload:
    runs-on: openrover
    needs: build
    steps:
      - name: Download install folder
        uses: actions/download-artifact@v2
        with:
          name: install
          path: install
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: venv
        run: |
          which python3
          python3 -m venv venv
          
          ./venv/bin/pip install --upgrade pip setuptools
          ./venv/bin/pip install openrover
      - name: Run pitstop
        timeout-minutes: 5
        run: |
          source venv/bin/activate
          # note this requires permission: sudo usermod -a -G dialout $(whoami)
          pitstop -f install/PowerBoard.hex -m 0
          sleep 30
          pitstop -m 0
